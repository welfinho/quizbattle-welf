AWSTemplateFormatVersion: '2010-09-09'
Description: QuizBattle Live - Komplettes IaC-Template mit CI/CD

Parameters:
  StageName:
    Type: String
    Default: prod
  LambdaCodeS3Bucket:
    Type: String
    Default: quizbattle-code-welf
  LambdaCodeS3KeyRegister:
    Type: String
    Default: register-player-welf.zip
  LambdaCodeS3KeySubmit:
    Type: String
    Default: submit-answer-welf-v2.zip
  LambdaCodeS3KeyNext:
    Type: String
    Default: next-question-welf-v2.zip

Resources:

  ###################################
  # IAM Roles
  ###################################

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: QuizBattleLambdaRole-welf
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  ###################################
  # DynamoDB Tables
  ###################################

  PlayersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: QuizPlayers-welf
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: playerId
          AttributeType: S
      KeySchema:
        - AttributeName: playerId
          KeyType: HASH

  QuestionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: QuizQuestions-welf
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: questionId
          AttributeType: S
      KeySchema:
        - AttributeName: questionId
          KeyType: HASH

  ###################################
  # Lambda Functions
  ###################################

  RegisterPlayerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: register-player-welf
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: !Ref LambdaCodeS3KeyRegister
      Environment:
        Variables:
          PLAYERS_TABLE: !Ref PlayersTable

  SubmitAnswerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: submit-answer-welf
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: !Ref LambdaCodeS3KeySubmit
      Environment:
        Variables:
          PLAYERS_TABLE: !Ref PlayersTable
          QUESTIONS_TABLE: !Ref QuestionsTable

  NextQuestionFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: next-question-welf
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: !Ref LambdaCodeS3KeyNext
      Environment:
        Variables:
          QUESTIONS_TABLE: !Ref QuestionsTable

  ###################################
  # API Gateway
  ###################################

  QuizApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: QuizBattleAPI-welf

  QuizJoin:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt QuizApi.RootResourceId
      PathPart: join
      RestApiId: !Ref QuizApi

  QuizSubmit:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt QuizApi.RootResourceId
      PathPart: submit
      RestApiId: !Ref QuizApi

  QuizNext:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt QuizApi.RootResourceId
      PathPart: next
      RestApiId: !Ref QuizApi

  RegisterPlayerMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref QuizJoin
      RestApiId: !Ref QuizApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RegisterPlayerFunction.Arn}/invocations

  SubmitAnswerMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref QuizSubmit
      RestApiId: !Ref QuizApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SubmitAnswerFunction.Arn}/invocations

  NextQuestionMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref QuizNext
      RestApiId: !Ref QuizApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NextQuestionFunction.Arn}/invocations

  LambdaInvokePermissionRegister:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref RegisterPlayerFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${QuizApi}/*/*/join

  LambdaInvokePermissionSubmit:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SubmitAnswerFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${QuizApi}/*/*/submit

  LambdaInvokePermissionNext:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NextQuestionFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${QuizApi}/*/*/next

Outputs:
  WebsiteJoinURL:
    Description: Endpoint for player registration
    Value: !Sub https://${QuizApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/join

  WebsiteSubmitURL:
    Description: Endpoint for submitting answers
    Value: !Sub https://${QuizApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/submit

  WebsiteNextURL:
    Description: Endpoint for retrieving next question
    Value: !Sub https://${QuizApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/next